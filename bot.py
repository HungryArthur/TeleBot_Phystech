import time
import os
import telebot
import requests
import pytz
from threading import Thread
from datetime import datetime
from dotenv import load_dotenv
from requests.adapters import HTTPAdapter
from urllib3.util.retry import Retry

load_dotenv()
TOKEN = os.getenv("TOKEN")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
def create_session():
    retry_strategy = Retry(
        total=3,
        backoff_factor=1,
        status_forcelist=[429, 500, 502, 503, 504],
        allowed_methods=["GET", "POST"]
    )
    
    adapter = HTTPAdapter(
        max_retries=retry_strategy,
        pool_connections=10,
        pool_maxsize=10
    )
    
    session = requests.Session()
    session.mount("http://", adapter)
    session.mount("https://", adapter)
    
    session.headers.update({
        'User-Agent': 'Mozilla/5.0 (compatible; TelegramBot/1.0)'
    })
    
    return session

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–æ—Ç–∏–∫–∞
def get_random_cat():
    try:
        response = bot.session.get(
            'https://api.thecatapi.com/v1/images/search', 
            timeout=10
        )
        if response.status_code == 200:
            return response.json()[0]['url']
        else:
            print(f"–û—à–∏–±–∫–∞ API –∫–æ—Ç–∏–∫–æ–≤: {response.status_code}")
            return None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ—Ç–∏–∫–∞: {e}")
        return None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π —Å–æ–±–∞—á–∫–∏
def get_random_dog():
    try:
        response = bot.session.get(
            'https://dog.ceo/api/breeds/image/random', 
            timeout=10
        )
        if response.status_code == 200:
            return response.json()['message']
        else:
            print(f"–û—à–∏–±–∫–∞ API —Å–æ–±–∞—á–µ–∫: {response.status_code}")
            return None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ–±–∞—á–∫–∏: {e}")
        return None

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ —Å –∫–∞—Å—Ç–æ–º–Ω–æ–π —Å–µ—Å—Å–∏–µ–π
bot = telebot.TeleBot(TOKEN)
bot.session = create_session()

TIMEZONE = pytz.timezone('Europe/Moscow')
chat_ids = set()
sent_birthdays = set()
last_reset_date = None
morning_sent_today = False
evening_sent_today = False

birthdays = {
    "10.01": ["–ú–∏—Ö–∞–∏–ª üéÇ", "–ù–∏–∫–∏—Ç–∞ üéÇ"],
    "24.04": ["–ù–∏–∫–∏—Ç–∞ ü•≥", "–ú–∞—Ä–∏—è üéÇ"],
    "30.05": ["–ê—Ä—Ç–µ–º üéÇ", "–ï–≤–≥–µ–Ω–∏–π ü•≥"],
    "23.12": ["–î–µ–Ω–∏—Å üéâ"],
    "13.01": ["–î–∏–∞–Ω–∞ üéÇ"],
    "14.04": ["–ê–ª–ª–∞ ü•≥"],
    "14.01": ["–í–ª–∞–¥–∏—Å–ª–∞–≤ ü•≥"],
    "01.02": ["–î–∞–Ω–∏–∏–ª üéÇ"],
    "19.02": ["–í–µ—Ä–æ–Ω–∏–∫–∞ ü•≥"],
    "20.03": ["–ö—Å—é—à–∞ üéÇ"],
    "29.03": ["–ü–æ–ª–∏–Ω–∞ üéÇ"],
    "30.04": ["–í–∞–¥–∏–º ü•≥"],
    "08.06": ["–ê–ª–µ–∫—Å–∞–Ω–¥—Ä üéÇ"],
    "20.06": ["–î–∞–Ω–∏—ç–ª—å ü•≥"],
    "22.06": ["–ò–≥–æ—Ä—å üéâ"],
    "04.07": ["–ï–≥–æ—Ä üéÇ"],
    "29.07": ["–ï–≥–æ—Ä ü•≥"],
    "10.08": ["–ú–∞—Ç–≤–µ–π üéÇ"],
    "28.08": ["–ú–∞–∫—Å–∏–º ü•≥"],
    "26.09": ["–ê–Ω–∞—Å—Ç–∞—Å–∏—è üéÇ"],
    "08.10": ["–ê—Ä—Ç—É—Ä ü•≥"],
    "26.10": ["–î–∞—Ä—å—è üéÇ"],
    "13.11": ["–ù–∏–∫–∏—Ç–∞ ü•≥"],
    "16.11": ["–ö–∏—Ä–∏–ª–ª üéÇ"],
    "25.11": ["–ö–∏—Ä–∏–ª–ª ü•≥"],
    "03.02": ["–ú—É—Ö–∞–º–º–∞–¥ ü•≥"],
    "01.10": ["–ò—Ä–∏–Ω–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞ üéÇü•≥üéâ"]
}

# –ö–æ–º–∞–Ω–¥–∞ /start –¥–æ–±–∞–≤–ª—è–µ—Ç —á–∞—Ç –≤ —Ä–∞—Å—Å—ã–ª–∫—É
@bot.message_handler(commands=['start'])
def start(message):
    chat_id = message.chat.id
    if chat_id not in chat_ids:
        chat_ids.add(chat_id)
        bot.reply_to(message, "–Ø –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –¥–æ–±—Ä—ã–µ —É—Ç—Ä–∞ –∏ —Å–ø–æ–∫–æ–π–Ω—ã–µ –≤–µ—á–µ—Ä–∞ —Å –∫–æ—Ç–∏–∫–∞–º–∏, –∞ —Ç–∞–∫–∂–µ –ø–æ–∑–¥—Ä–∞–≤–ª—è—Ç—å —Å –î–†! üòä\n\n–†–∞—Å—Å—ã–ª–∫–∏ –≤:\n‚Ä¢ 8:00 - –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ —Å –∫–æ—Ç–∏–∫–æ–º\n‚Ä¢ 20:00 - –°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏ —Å –∫–æ—Ç–∏–∫–æ–º/—Å–æ–±–∞—á–∫–æ–π")
    else:
        bot.reply_to(message, "–Ø —É–∂–µ —Ä–∞–±–æ—Ç–∞—é –≤ —ç—Ç–æ–º —á–∞—Ç–µ! üê±")

# –ö–æ–º–∞–Ω–¥–∞ /stop —É–¥–∞–ª—è–µ—Ç —á–∞—Ç –∏–∑ —Ä–∞—Å—Å—ã–ª–∫–∏
@bot.message_handler(commands=['stop'])
def stop(message):
    chat_id = message.chat.id
    if chat_id in chat_ids:
        chat_ids.remove(chat_id)
        bot.reply_to(message, "–†–∞—Å—Å—ã–ª–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start —á—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –≤–∫–ª—é—á–∏—Ç—å.")
    else:
        bot.reply_to(message, "–†–∞—Å—Å—ã–ª–∫–∞ –∏ —Ç–∞–∫ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞ –≤ —ç—Ç–æ–º —á–∞—Ç–µ.")

# –ö–æ–º–∞–Ω–¥–∞ /status –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–µ—Å—Å–∏–∏
@bot.message_handler(commands=['status'])
def status(message):
    chat_id = message.chat.id
    if hasattr(bot, 'session') and bot.session:
        status_text = "‚úÖ –°–µ—Å—Å–∏—è –∞–∫—Ç–∏–≤–Ω–∞\n"
        status_text += f"üìä –ß–∞—Ç–æ–≤ –≤ —Ä–∞—Å—Å—ã–ª–∫–µ: {len(chat_ids)}\n"
        status_text += f"üìÖ –°–µ–≥–æ–¥–Ω—è: {datetime.now(TIMEZONE).strftime('%d.%m.%Y')}"
    else:
        status_text = "‚ùå –°–µ—Å—Å–∏—è –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞"
    
    bot.reply_to(message, status_text)

# –†–∞—Å—Å—ã–ª–∫–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
def check_birthdays_and_send_messages():
    global sent_birthdays, last_reset_date, morning_sent_today, evening_sent_today
    
    while True:
        try:
            now = datetime.now(TIMEZONE)
            today_date = now.strftime("%d.%m")
            current_time = now.strftime("%H:%M")
            
            # –°–±—Ä–æ—Å —Ñ–ª–∞–≥–æ–≤ –ø—Ä–∏ —Å–º–µ–Ω–µ –¥–Ω—è
            if last_reset_date != today_date:
                sent_birthdays.clear()
                morning_sent_today = False
                evening_sent_today = False
                last_reset_date = today_date
                print(f"–ù–æ–≤—ã–π –¥–µ–Ω—å: {today_date}, —Å–±—Ä–æ—Å —Ñ–ª–∞–≥–æ–≤ —Ä–∞—Å—Å—ã–ª–∫–∏")

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –î–†
            if today_date in birthdays and today_date not in sent_birthdays:
                names = ", ".join(birthdays[today_date])
                print(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –î–†: {names}")
                
                for chat_id in list(chat_ids):
                    try:
                        bot.send_message(chat_id, f"üéâ –°–µ–≥–æ–¥–Ω—è –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É {names}! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéÇ")
                        print(f"–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {chat_id}")
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –≤ —á–∞—Ç {chat_id}: {e}")
                        chat_ids.discard(chat_id)
                
                sent_birthdays.add(today_date)
                print(f"–î–† –Ω–∞ {today_date} –æ—Ç–º–µ—á–µ–Ω—ã –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ")

            # –£—Ç—Ä–µ–Ω–Ω—è—è —Ä–∞—Å—Å—ã–ª–∫–∞ (8:00)
            if now.hour == 8 and now.minute == 0 and not morning_sent_today:
                print("–í—Ä–µ–º—è —É—Ç—Ä–µ–Ω–Ω–µ–π —Ä–∞—Å—Å—ã–ª–∫–∏!")
                cat_image_url = get_random_cat()
                
                for chat_id in list(chat_ids):
                    try:
                        if cat_image_url:
                            bot.send_photo(chat_id, cat_image_url, 
                                         caption="–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! ‚òÄÔ∏è –õ–æ–≤–∏ –∫–æ—Ç–∏–∫–∞ –¥–ª—è —Ö–æ—Ä–æ—à–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è! –ü—É—Å—Ç—å –¥–µ–Ω—å –±—É–¥–µ—Ç –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–º –∏ —Ä–∞–¥–æ—Å—Ç–Ω—ã–º! üòä")
                            print(f"–£—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ—Ç–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —á–∞—Ç {chat_id}")
                        else:
                            bot.send_message(chat_id, 
                                          "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! ‚òÄÔ∏è –ö–æ—Ç–∏–∫ —Å–±–µ–∂–∞–ª, –Ω–æ –ø–æ–∂–µ–ª–∞–Ω–∏–µ –æ—Å—Ç–∞–ª–æ—Å—å! –ü—É—Å—Ç—å –≤–∞—à –¥–µ–Ω—å –±—É–¥–µ—Ç –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–º! üòä")
                            print(f"–£—Ç—Ä–µ–Ω–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∫–æ—Ç–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {chat_id}")
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ —É—Ç—Ä–µ–Ω–Ω–µ–π —Ä–∞—Å—Å—ã–ª–∫–∏ –≤ —á–∞—Ç {chat_id}: {e}")
                        chat_ids.discard(chat_id)
                
                morning_sent_today = True
                print("–£—Ç—Ä–µ–Ω–Ω—è—è —Ä–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
                time.sleep(60)  # –ó–∞—â–∏—Ç–∞ –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è

            # –í–µ—á–µ—Ä–Ω—è—è —Ä–∞—Å—Å—ã–ª–∫–∞ (20:00)
            elif now.hour == 20 and now.minute == 0 and not evening_sent_today:
                print("–í—Ä–µ–º—è –≤–µ—á–µ—Ä–Ω–µ–π —Ä–∞—Å—Å—ã–ª–∫–∏!")
                # –ß–µ—Ä–µ–¥—É–µ–º –∫–æ—Ç–∏–∫–æ–≤ –∏ —Å–æ–±–∞—á–µ–∫ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
                if now.day % 2 == 0:  # –ß–µ—Ç–Ω—ã–µ –¥–Ω–∏ - –∫–æ—Ç–∏–∫–∏
                    pet_image_url = get_random_cat()
                    pet_type = "–∫–æ—Ç–∏–∫–∞"
                else:  # –ù–µ—á–µ—Ç–Ω—ã–µ –¥–Ω–∏ - —Å–æ–±–∞—á–∫–∏
                    pet_image_url = get_random_dog()
                    pet_type = "—Å–æ–±–∞—á–∫—É"
                
                for chat_id in list(chat_ids):
                    try:
                        if pet_image_url:
                            caption = f"–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏! üåô –õ–æ–≤–∏ {pet_type} –¥–ª—è —Å–ª–∞–¥–∫–∏—Ö —Å–Ω–æ–≤! –û—Ç–¥—ã—Ö–∞–π—Ç–µ –∏ –Ω–∞–±–∏—Ä–∞–π—Ç–µ—Å—å —Å–∏–ª –Ω–∞ –∑–∞–≤—Ç—Ä–∞! üò¥üí´"
                            
                            bot.send_photo(chat_id, pet_image_url, caption=caption)
                            print(f"–í–µ—á–µ—Ä–Ω–∏–π –ø–∏—Ç–æ–º–µ—Ü –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —á–∞—Ç {chat_id}")
                        else:
                            bot.send_message(chat_id, 
                                          "–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏! üåô –ü–∏—Ç–æ–º–µ—Ü —É–±–µ–∂–∞–ª —Å–ø–∞—Ç—å, –Ω–æ –ø–æ–∂–µ–ª–∞–Ω–∏–µ –æ—Å—Ç–∞–ª–æ—Å—å! –•–æ—Ä–æ—à–∏—Ö —Å–Ω–æ–≤ –∏ –ø—Ä–∏—è—Ç–Ω—ã—Ö —Å–Ω–æ–≤–∏–¥–µ–Ω–∏–π! üò¥‚ú®")
                            print(f"–í–µ—á–µ—Ä–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –ø–∏—Ç–æ–º—Ü–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {chat_id}")
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –≤–µ—á–µ—Ä–Ω–µ–π —Ä–∞—Å—Å—ã–ª–∫–∏ –≤ —á–∞—Ç {chat_id}: {e}")
                        chat_ids.discard(chat_id)
                
                evening_sent_today = True
                print("–í–µ—á–µ—Ä–Ω—è—è —Ä–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
                time.sleep(60)  # –ó–∞—â–∏—Ç–∞ –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
            
            time.sleep(30)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
            
        except Exception as e:
            print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")
            time.sleep(60)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
def start_bot():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω... :)")
    print("–†–∞—Å—Å—ã–ª–∫–∏ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞:")
    print("‚Ä¢ 8:00 - –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ —Å –∫–æ—Ç–∏–∫–æ–º")
    print("‚Ä¢ 20:00 - –°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏ —Å –∫–æ—Ç–∏–∫–æ–º/—Å–æ–±–∞—á–∫–æ–π")
    print("–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞—Å—Ç–æ–º–Ω–∞—è —Å–µ—Å—Å–∏—è —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–π –ø–æ—Ç–æ–∫ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
    Thread(target=check_birthdays_and_send_messages, daemon=True).start()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º polling —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    while True:
        try:
            print("–ó–∞–ø—É—Å–∫ polling...")
            bot.polling(
                timeout=30,
                long_polling_timeout=30,
                non_stop=True
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ polling: {e}")
            print("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥...")
            time.sleep(10)

if __name__ == "__main__":
    start_bot()
